<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		 http://www.springframework.org/schema/aop 
		 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		 http://www.springframework.org/schema/tx 
		 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">

    <aop:aspectj-autoproxy/>

    <mvc:default-servlet-handler/>
	<!--静态资源映射  -->
<!-- 	<mvc:resources mapping="/css/**" location="/css/" cache-period="31536000"/>
    <mvc:resources mapping="/font/**" location="/font/" cache-period="31536000"/>
    <mvc:resources mapping="/js/**" location="/js/" cache-period="31536000"/>
    <mvc:resources mapping="/fonts/**" location="/fonts/" cache-period="31536000"/>
    <mvc:resources mapping="/img/**" location="/img/" cache-period="31536000"/>
    <mvc:resources mapping="/user_img/**" location="/user_img/" cache-period="31536000"/>
    <mvc:resources mapping="/video/**" location="/video/" cache-period="31536000"/>
    <mvc:resources mapping="/video_image/**" location="/video_image/" cache-period="31536000"/>
    <mvc:resources mapping="/resourcesimg/**" location="/resourcesimg/" cache-period="31536000"/>
    <mvc:resources mapping="/resources/**" location="/resources/" cache-period="31536000"/>
    <mvc:resources mapping="/mapProject/**" location="/mapProject/" cache-period="31536000"/>
    <mvc:resources mapping="/webpage/**" location="/webpage/" cache-period="31536000"/> -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:spring-mvc.properties"/>
	<!-- 自动扫描controller包下的所有类，如果@Controller注入为bean -->	
<!--     <context:component-scan base-package="com.ddjc.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan> -->
    
   <context:component-scan base-package="com.ddjc.controller" />
    <!-- 默认的注解映射的支持-->
    	<mvc:annotation-driven/>
<!--     <mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
            <ref bean="byteArrayHttpMessageConverter"/>
            <ref bean="stringHttpMessageConverter"/>
            <ref bean="jacksonHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven> -->
    
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.ddjc.interceptor.InterceptorAdapter"/>
        </mvc:interceptor>
    </mvc:interceptors>
     <bean id="byteArrayHttpMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>

    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
        <constructor-arg value="UTF-8"/>
        <property name="supportedMediaTypes">
            <list>
                <value>${web.content.html.type}</value>
                <value>${web.content.text.type}</value>
            </list>
        </property>
    </bean>
<!--     JSON支持，避免IE执行AJAX时,返回JSON出现下载文件
    <bean id="jacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="objectMapper">
            <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                <property name="serializationInclusion">
                    <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
                </property>
            </bean>
            
        </property>
        <property name="supportedMediaTypes">
            <list>
                <value>${web.content.html.type}</value>
                <value>${web.content.text.type}</value>
                <value>${web.content.json.type}</value>
            </list>
        </property>
    </bean> -->
    	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
    
<!--    	启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<!-- json转换器 -->
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
  <!-- 文件上传支持 -->
    <!--   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding">
            <value>${web.encode}</value>
        </property>
        <property name="maxUploadSize">
            <value>${web.max.size}</value>
        </property>
        <property name="maxInMemorySize">
            <value>${web.upload.memory}</value>
        </property>
    </bean> -->
    	<!-- 配置多文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
		<property name="maxUploadSize">
			<!-- 上传文件大小限制为310M，310*1024*1024 -->
			<value>325058560</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

    <!-- AOP式方法级权限检查-->
<!--     <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean> -->

</beans>